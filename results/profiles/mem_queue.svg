<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 12.2.1 (0)
 -->
<!-- Title: queue.test Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[/** 
 *  SVGPan library 1.2.2
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the 
 * first g-element), including the the library into any SVG adds the following 
 * capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behaviour of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2019 Andrea Leofreddi <a.leofreddi@vleo.net>. All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 *    1. Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *    2. Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *    3. Neither the name of the copyright holder nor the names of its 
 *       contributors may be used to endorse or promote products derived from 
 *       this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY COPYRIGHT HOLDERS AND CONTRIBUTORS ``AS IS'' AND ANY EXPRESS 
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY 
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION 
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)
var zoomScale = 0.2; // Zoom sensitivity

/// <====
/// END OF CONFIGURATION 

var root = document.documentElement;
var state = 'none', svgRoot = null, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(svgRoot == null) {
		var r = root.getElementById("viewport") ? root.getElementById("viewport") : root.documentElement, t = r;

		while(t != root) {
			if(t.getAttribute("viewBox")) {
				setCTM(r, t.getCTM());

				t.removeAttribute("viewBox");
			}

			t = t.parentNode;
		}

		svgRoot = r;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 360; // Chrome/Safari
	else
		delta = evt.detail / -9; // Mozilla

	var z = Math.pow(1 + zoomScale, delta);

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

	setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg" 
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element 
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}
]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 679.75)">
<title>queue.test</title>
<polygon fill="white" stroke="none" points="-4,4 -4,-679.75 988.12,-679.75 988.12,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_L</title>
<polygon fill="none" stroke="black" points="8,-488.25 8,-667.75 632,-667.75 632,-488.25 8,-488.25"/>
</g>
<!-- File: queue.test -->
<g id="node1" class="node">
<title>File: queue.test</title>
<g id="a_node1"><a xlink:title="queue.test">
<polygon fill="#f8f8f8" stroke="black" points="623.88,-659.75 16.12,-659.75 16.12,-496.25 623.88,-496.25 623.88,-659.75"/>
<text text-anchor="start" x="24.12" y="-640.55" font-family="Times,serif" font-size="16.00">File: queue.test</text>
<text text-anchor="start" x="24.12" y="-621.05" font-family="Times,serif" font-size="16.00">Build ID: 9661abbe23554cfe0c0aa41b78e2911a349e2cf2</text>
<text text-anchor="start" x="24.12" y="-601.55" font-family="Times,serif" font-size="16.00">Type: alloc_space</text>
<text text-anchor="start" x="24.12" y="-582.05" font-family="Times,serif" font-size="16.00">Time: 2025&#45;06&#45;15 16:21:24 MSK</text>
<text text-anchor="start" x="24.12" y="-562.55" font-family="Times,serif" font-size="16.00">Showing nodes accounting for 2447.70MB, 98.65% of 2481.16MB total</text>
<text text-anchor="start" x="24.12" y="-543.05" font-family="Times,serif" font-size="16.00">Dropped 201 nodes (cum &lt;= 12.41MB)</text>
<text text-anchor="start" x="24.12" y="-504.55" font-family="Times,serif" font-size="16.00">See https://git.io/JfYMW for how to read the graph</text>
</a>
</g>
</g>
<!-- N1 -->
<g id="node1" class="node">
<title>N1</title>
<g id="a_node1"><a xlink:title="github.com/stsolovey/diplom&#45;distributed&#45;system/internal/queue.BenchmarkMemoryQueue_EnqueueDequeue.func1 (2454.21MB)">
<polygon fill="#edd5d5" stroke="#b20000" points="984.12,-443 419.88,-443 419.88,-292.5 984.12,-292.5 984.12,-443"/>
<text text-anchor="middle" x="702" y="-416.2" font-family="Times,serif" font-size="24.00">queue</text>
<text text-anchor="middle" x="702" y="-387.7" font-family="Times,serif" font-size="24.00">BenchmarkMemoryQueue_EnqueueDequeue</text>
<text text-anchor="middle" x="702" y="-359.2" font-family="Times,serif" font-size="24.00">func1</text>
<text text-anchor="middle" x="702" y="-330.7" font-family="Times,serif" font-size="24.00">2195.70MB (88.49%)</text>
<text text-anchor="middle" x="702" y="-302.2" font-family="Times,serif" font-size="24.00">of 2454.21MB (98.91%)</text>
</a>
</g>
</g>
<!-- NN1_0 -->
<g id="NN1_0" class="node">
<title>NN1_0</title>
<g id="a_NN1_0"><a xlink:title="1821.69MB">
<polygon fill="#f8f8f8" stroke="black" points="618,-239.25 568,-239.25 564,-235.25 564,-203.25 614,-203.25 618,-207.25 618,-239.25"/>
<polyline fill="none" stroke="black" points="614,-235.25 564,-235.25"/>
<polyline fill="none" stroke="black" points="614,-235.25 614,-203.25"/>
<polyline fill="none" stroke="black" points="614,-235.25 618,-239.25"/>
<text text-anchor="middle" x="591" y="-218.53" font-family="Times,serif" font-size="8.00">112B</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;NN1_0 -->
<g id="edge1" class="edge">
<title>N1&#45;&gt;NN1_0</title>
<g id="a_edge1"><a xlink:title="1821.69MB">
<path fill="none" stroke="black" d="M622.9,-292.19C618.35,-286.42 614.08,-280.5 610.25,-274.5 605.59,-267.19 601.83,-258.58 598.91,-250.49"/>
<polygon fill="black" stroke="black" points="602.25,-249.43 595.81,-241.02 595.59,-251.61 602.25,-249.43"/>
</a>
</g>
<g id="a_edge1&#45;label"><a xlink:title="1821.69MB">
<text text-anchor="middle" x="654.12" y="-261.2" font-family="Times,serif" font-size="14.00"> 1821.69MB</text>
</a>
</g>
</g>
<!-- NN1_1 -->
<g id="NN1_1" class="node">
<title>NN1_1</title>
<g id="a_NN1_1"><a xlink:title="374.01MB">
<polygon fill="#f8f8f8" stroke="black" points="729,-239.25 679,-239.25 675,-235.25 675,-203.25 725,-203.25 729,-207.25 729,-239.25"/>
<polyline fill="none" stroke="black" points="725,-235.25 675,-235.25"/>
<polyline fill="none" stroke="black" points="725,-235.25 725,-203.25"/>
<polyline fill="none" stroke="black" points="725,-235.25 729,-239.25"/>
<text text-anchor="middle" x="702" y="-218.53" font-family="Times,serif" font-size="8.00">16B</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;NN1_1 -->
<g id="edge2" class="edge">
<title>N1&#45;&gt;NN1_1</title>
<g id="a_edge2"><a xlink:title="374.01MB">
<path fill="none" stroke="black" d="M702,-292.38C702,-277.7 702,-263.14 702,-251.12"/>
<polygon fill="black" stroke="black" points="705.5,-251.13 702,-241.13 698.5,-251.13 705.5,-251.13"/>
</a>
</g>
<g id="a_edge2&#45;label"><a xlink:title="374.01MB">
<text text-anchor="middle" x="741.38" y="-261.2" font-family="Times,serif" font-size="14.00"> 374.01MB</text>
</a>
</g>
</g>
<!-- N3 -->
<g id="node3" class="node">
<title>N3</title>
<g id="a_node3"><a xlink:title="fmt.Sprintf (258.51MB)">
<polygon fill="#ede6e0" stroke="#b28355" points="884.62,-166.25 707.38,-166.25 707.38,-89.25 884.62,-89.25 884.62,-166.25"/>
<text text-anchor="middle" x="796" y="-148.95" font-family="Times,serif" font-size="14.00">fmt</text>
<text text-anchor="middle" x="796" y="-131.7" font-family="Times,serif" font-size="14.00">Sprintf</text>
<text text-anchor="middle" x="796" y="-114.45" font-family="Times,serif" font-size="14.00">252MB (10.16%)</text>
<text text-anchor="middle" x="796" y="-97.2" font-family="Times,serif" font-size="14.00">of 258.51MB (10.42%)</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;N3 -->
<g id="edge5" class="edge">
<title>N1&#45;&gt;N3</title>
<g id="a_edge5"><a xlink:title="github.com/stsolovey/diplom&#45;distributed&#45;system/internal/queue.BenchmarkMemoryQueue_EnqueueDequeue.func1 &#45;&gt; fmt.Sprintf (258.51MB)">
<path fill="none" stroke="#b28355" d="M772.76,-292.23C776.27,-286.47 779.41,-280.54 782,-274.5 795.04,-244.08 798.44,-206.89 798.63,-177.7"/>
<polygon fill="#b28355" stroke="#b28355" points="802.13,-178.02 798.56,-168.04 795.13,-178.07 802.13,-178.02"/>
</a>
</g>
<g id="a_edge5&#45;label"><a xlink:title="github.com/stsolovey/diplom&#45;distributed&#45;system/internal/queue.BenchmarkMemoryQueue_EnqueueDequeue.func1 &#45;&gt; fmt.Sprintf (258.51MB)">
<text text-anchor="middle" x="836.96" y="-216.57" font-family="Times,serif" font-size="14.00"> 258.51MB</text>
</a>
</g>
</g>
<!-- N2 -->
<g id="node2" class="node">
<title>N2</title>
<g id="a_node2"><a xlink:title="testing.(*B).RunParallel.func1 (2454.21MB)">
<polygon fill="#edd5d5" stroke="#b20000" points="762.12,-606.38 641.88,-606.38 641.88,-549.62 762.12,-549.62 762.12,-606.38"/>
<text text-anchor="middle" x="702" y="-594.77" font-family="Times,serif" font-size="8.00">testing</text>
<text text-anchor="middle" x="702" y="-585.02" font-family="Times,serif" font-size="8.00">(*B)</text>
<text text-anchor="middle" x="702" y="-575.27" font-family="Times,serif" font-size="8.00">RunParallel</text>
<text text-anchor="middle" x="702" y="-565.52" font-family="Times,serif" font-size="8.00">func1</text>
<text text-anchor="middle" x="702" y="-555.77" font-family="Times,serif" font-size="8.00">0 of 2454.21MB (98.91%)</text>
</a>
</g>
</g>
<!-- N2&#45;&gt;N1 -->
<g id="edge4" class="edge">
<title>N2&#45;&gt;N1</title>
<g id="a_edge4"><a xlink:title="testing.(*B).RunParallel.func1 &#45;&gt; github.com/stsolovey/diplom&#45;distributed&#45;system/internal/queue.BenchmarkMemoryQueue_EnqueueDequeue.func1 (2454.21MB)">
<path fill="none" stroke="#b20000" stroke-width="5" d="M702,-549.35C702,-526.15 702,-491.66 702,-459.02"/>
<polygon fill="#b20000" stroke="#b20000" stroke-width="5" points="706.38,-459.44 702,-449.44 697.63,-459.44 706.38,-459.44"/>
</a>
</g>
<g id="a_edge4&#45;label"><a xlink:title="testing.(*B).RunParallel.func1 &#45;&gt; github.com/stsolovey/diplom&#45;distributed&#45;system/internal/queue.BenchmarkMemoryQueue_EnqueueDequeue.func1 (2454.21MB)">
<text text-anchor="middle" x="745.88" y="-464.95" font-family="Times,serif" font-size="14.00"> 2454.21MB</text>
</a>
</g>
</g>
<!-- NN3_0 -->
<g id="NN3_0" class="node">
<title>NN3_0</title>
<g id="a_NN3_0"><a xlink:title="253MB">
<polygon fill="#f8f8f8" stroke="black" points="823,-36 773,-36 769,-32 769,0 819,0 823,-4 823,-36"/>
<polyline fill="none" stroke="black" points="819,-32 769,-32"/>
<polyline fill="none" stroke="black" points="819,-32 819,0"/>
<polyline fill="none" stroke="black" points="819,-32 823,-36"/>
<text text-anchor="middle" x="796" y="-15.28" font-family="Times,serif" font-size="8.00">16B</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;NN3_0 -->
<g id="edge3" class="edge">
<title>N3&#45;&gt;NN3_0</title>
<g id="a_edge3"><a xlink:title="253MB">
<path fill="none" stroke="black" stroke-dasharray="1,5" d="M796,-88.76C796,-75.26 796,-60.3 796,-47.71"/>
<polygon fill="black" stroke="black" points="799.5,-48 796,-38 792.5,-48 799.5,-48"/>
</a>
</g>
<g id="a_edge3&#45;label"><a xlink:title="253MB">
<text text-anchor="middle" x="824.12" y="-57.95" font-family="Times,serif" font-size="14.00"> 253MB</text>
</a>
</g>
</g>
</g>
</g></svg>
